upstream keycloak_backend {
  server local_keycloak:8080;
}
server {
    #listen 127.0.0.1;
    listen 80;
    server_name sso.domen.com;
    location / {
        return 301 https://$host$request_uri;
    }
}
server {
    listen 443 ssl;
    server_name sso.domen.com;
    ssl_certificate /etc/nginx/certs/cert.crt;
    ssl_certificate_key /etc/nginx/certs/cert.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !S>


location / {
          proxy_pass "http://keycloak_backend";
          proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
          proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
          proxy_set_header Host $host; # to forward the original host requested by the client
          proxy_buffers 4 256k;
          proxy_buffer_size 128k;
          proxy_busy_buffers_size 256k;
    }

    location /admin {
          proxy_pass "http://keycloak_backend/admin";
          proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
          proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
          proxy_set_header Host $host; # to forward the original host requested by the client
          proxy_buffers 4 256k;
          proxy_buffer_size 128k;
          proxy_busy_buffers_size 256k;
    }

}
